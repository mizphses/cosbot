name: Release Production

on:
  workflow_dispatch:
    inputs:
      with_d1:
        description: 'DBの変更もデプロイする'
        required: false
        default: false
        type: boolean

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  Release:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate release tag
        id: release_tag
        run: |
          VERSION=$(date +'%Y.%m.%d.%H%M')
          echo "VERSION=v$VERSION" >> $GITHUB_OUTPUT
        env:
          TZ: 'Asia/Tokyo'

      - name: Release
        uses: release-drafter/release-drafter@v5
        with:
          tag: ${{ steps.release_tag.outputs.VERSION }}
          name: ${{ steps.release_tag.outputs.VERSION }}
          version: ${{ steps.release_tag.outputs.VERSION }}
          publish: true
          commitish: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
      - name: Create Prisma Client
        run: pnpm gen:client
      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          secrets: |
            TOKEN_KEY
            SALT
            ANTHROPIC_API_KEY
        env:
          TOKEN_KEY: ${{ secrets.TOKEN_KEY }}
          SALT: ${{ secrets.SALT }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
  db-deploy:
    runs-on: ubuntu-latest
    name: D1 Deploy
    if: ${{ github.event.inputs.with_d1 == 'true' }}
    steps:
      - name: Setup
        uses: ./.github/actions/setup
      - name: Create Prisma Client
        run: pnpm gen:client
      - uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: d1 migrations apply CHUO_IDS_COS
